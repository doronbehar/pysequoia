pipeline:
  build:
    # will execute group in parallel
    group: build
    image: woodpeckerci/plugin-docker-buildx
    settings:
      dockerfile: ci/build.dockerfile
      # do not push
      dry_run: true

  e2e:
    group: build
    image: woodpeckerci/plugin-docker-buildx
    settings:
      dockerfile: ci/e2e.dockerfile
      # do not push
      dry_run: true

  audit:
    group: build
    image: woodpeckerci/plugin-docker-buildx
    settings:
      dockerfile: ci/audit.dockerfile
      # do not push
      dry_run: true
    when:
      event: [push, cron, pull_request]

  pages:
    group: build
    image: woodpeckerci/plugin-docker-buildx
    settings:
      dockerfile: ci/docs.dockerfile
      output: type=local,dest=public
      # do not push, push cannot be used with output simultaneously anyway
      dry_run: true

  pages-publish:
    image: bitnami/git
    secrets: [ codeberg_token ]
    commands:
      - git config --global user.email woodpecker@codeberg.org
      - git config --global user.name "Woodpecker CI"
      - git clone -b pages https://$CODEBERG_TOKEN@codeberg.org/$CI_REPO.git $CI_REPO_NAME
      - cp -ar public/. $CI_REPO_NAME/
      # Needed for custom domains
      - cp .domains $CI_REPO_NAME || true # Ignore if it doesn't exist
      - cd $CI_REPO_NAME
      - >
        if [ -z "$(git status --porcelain)" ]; then
          echo "No changes"
        else
          git add .
          git commit -m "Update rendered page" -m "Source: $CI_COMMIT_SHA" -m "See: $CI_BUILD_LINK"
          git push
        fi
    when:
      event: push

  update-deps:
    group: build
    image: rust
    secrets: [ codeberg_token ]
    commands:
      - git config --global user.email woodpecker@codeberg.org
      - git config --global user.name "Woodpecker CI"
      - cargo install cargo-edit
      - >
        REPORT=$(cargo upgrade --incompatible | sed -ne 's/.*/    &/p')
        if [ -z "$(git status --porcelain)" ]; then
          echo "No changes"
        else
          git checkout -b update-deps
          git add .
          git commit -m "Update dependencies" -m "$REPORT" -m "Build: $CI_SYSTEM_LINK/$CI_REPO/pipeline/$CI_BUILD_NUMBER"
          # Force update overwriting last changes
          git push --force https://$CODEBERG_TOKEN@codeberg.org/$CI_REPO.git update-deps

          # See if we need to open a PR
          if [ -z "$(curl -sSL 'https://codeberg.org/api/v1/repos/$CI_REPO/pulls?state=open' | grep 'Update dependencies')" ]; then
            echo "This is automated PR created by bot." > /tmp/body
            echo "$REPORT" >> /tmp/body
            echo "Build: $CI_SYSTEM_LINK/$CI_REPO/pipeline/$CI_BUILD_NUMBER" >> /tmp/body
            curl -sSL -H "Authorization: token $CODEBERG_TOKEN" -d head=update-deps -d base=main -d title="Update dependencies" -d body=@/tmp/body "https://codeberg.org/api/v1/repos/$CI_REPO/pulls"
            echo "PR created"
          else
            echo "PR is already open"
          fi
        fi
    when:
      event: cron

branches:
  exclude: [ pages ]
